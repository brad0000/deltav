{"version":3,"sources":["Weapon.ts"],"names":[],"mappings":"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","file":"Weapon.js","sourcesContent":["namespace deltav {\r\n    export class Weapon {\r\n        private velocity = 100;\r\n        private reloadTime = .5;\r\n        private countdown = 0;\r\n\r\n        constructor(private ship: Ship) {\r\n        }\r\n\r\n        public ready() {\r\n            return this.countdown === 0;\r\n        }\r\n\r\n        public update(time: number) {\r\n            this.countdown -= time;\r\n            if (this.countdown < 0) {\r\n                this.countdown = 0;\r\n            }\r\n        }\r\n\r\n        public fire(world: World, position: Vector, velocity: Vector, mass: number) {\r\n            let barrel = position.add(velocity.toUnitVector().multiply(15));\r\n            let shipV = this.ship.getV();\r\n            world.addDynamicBody(\r\n                new Bullet(\r\n                    this.ship.logger,\r\n                    this,\r\n                    barrel,\r\n                    shipV.add(shipV.toUnitVector().multiply(this.velocity))));\r\n            this.countdown = this.reloadTime;\r\n        }\r\n\r\n        public recentlyFired(bullet: Bullet): boolean {\r\n            return bullet.isFrom(this) && this.countdown > 0;\r\n        }\r\n    }\r\n\r\n    export class Bullet extends Body {\r\n        constructor(logger: Logger, private weapon: Weapon, position: Vector, velocity: Vector) {\r\n            super(logger, position);\r\n            this.velocity = velocity;\r\n            this.mass = 2;\r\n            this.brush = \"orange\";\r\n            this.heading = velocity.toAngle();\r\n\r\n            let geo = [\r\n                Vector.create([-5, -2.5]),\r\n                Vector.create([4, -2.5]),\r\n                Vector.create([6.25, 0]),\r\n                Vector.create([4, 2.5]),\r\n                Vector.create([-5, 2.5]),\r\n            ];\r\n\r\n            for (let i = 0; i < geo.length; i++) {\r\n                geo[i] = geo[i].multiply(0.75);\r\n            }\r\n\r\n            this.setGeometry(geo);\r\n        }\r\n\r\n        public update(time: number, world: World, input: Input) {\r\n            super.update(time, world, input);\r\n        }\r\n\r\n        public render(ctx: CanvasRenderingContext2D) {\r\n            super.render(ctx);\r\n        }\r\n\r\n        public isFrom(weapon: Weapon) {\r\n            return this.weapon === weapon;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}