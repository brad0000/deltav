{"version":3,"sources":["Asteroid.ts"],"names":[],"mappings":"AAAA,IAAU,MAAM,CAqCf;AArCD,WAAU,MAAM,EAAC,CAAC;IACd,uBAA8B,WAAI;QAE9B,YAAY,MAAc,EAAE,QAAgB,EAAE,MAAc;YACxD,MAAM,MAAM,EAAE,QAAQ,CAAC,CAAC;YAExB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YAGpB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC9E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,GAAG,MAAM,CAAC;YAEpD,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC;YACxD,IAAI,GAAG,GAAG,IAAI,KAAK,EAAU,CAAC;YAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,UAAU,CAAC;gBAC9B,GAAG,CAAC,IAAI,CACJ,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBACtB,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YACrD,CAAC;YAED,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;QAEM,MAAM,CAAC,IAAY,EAAE,KAAY,EAAE,KAAY;YAClD,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAEM,MAAM,CAAC,GAA6B;YACvC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC;IAEL,CAAC;IAnCY,eAAQ,WAmCpB,CAAA;AACL,CAAC,EArCS,MAAM,KAAN,MAAM,QAqCf","file":"Asteroid.js","sourcesContent":["namespace deltav {\r\n    export class Asteroid extends Body {\r\n\r\n        constructor(logger: Logger, position: Vector, radius: number) {\r\n            super(logger, position);\r\n\r\n            this.brush = \"gray\";\r\n\r\n            // radom velocities\r\n            this.velocity.setElements([Math.random() * 7 - 3.5, Math.random() * 7 - 3.5]);\r\n            this.rotationSpeed = Math.random() * 0.001 - 0.0005;\r\n\r\n            let v = Vector.create([1, 0]);\r\n            let r = 0;\r\n            let iterations = Math.round(4 + Math.random() * radius);\r\n            let geo = new Array<Vector>();\r\n            for (let i = 0; i < iterations; i++) {\r\n                r += Math.PI * 2 / iterations;\r\n                geo.push(\r\n                    v.rotate(r, Vector.Zero(2))\r\n                        .multiply(radius * (1 + Math.random())));\r\n            }\r\n\r\n            this.setGeometry(geo);\r\n        }\r\n\r\n        public update(time: number, world: World, input: Input): boolean {\r\n            let moved = super.update(time, world, input);\r\n            this.heading += this.rotationSpeed / time;\r\n            return moved;\r\n        }\r\n\r\n        public render(ctx: CanvasRenderingContext2D) {\r\n            super.render(ctx);\r\n        }\r\n\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}