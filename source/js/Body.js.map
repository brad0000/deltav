{"version":3,"sources":["Body.ts"],"names":[],"mappings":"AAAA,IAAU,MAAM,CA+Cf;AA/CD,WAAU,MAAM,EAAC,CAAC;IACd;QAYI,YAAY,MAAc,EAAE,CAAS,EAAE,CAAS;YATtC,SAAI,GAAG,CAAC,CAAC;YACT,aAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,aAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,iBAAY,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE9B,YAAO,GAAG,CAAC,CAAC;YACZ,aAAQ,GAAG,KAAK,EAAU,CAAC;YAIjC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAC3B,CAAC;QAEM,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACtC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAE/B,MAAM,CAAC,IAAY,EAAE,KAAY,EAAE,KAAY;YAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QACxE,CAAC;QAEM,MAAM,CAAC,GAA6B;YACvC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAE7B,GAAG,CAAC,SAAS,EAAE,CAAC;YAEhB,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChF,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC5C,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC5E,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,CAAC;YAED,GAAG,CAAC,SAAS,EAAE,CAAC;YAChB,GAAG,CAAC,IAAI,EAAE,CAAC;QACf,CAAC;IACL,CAAC;IA7CY,WAAI,OA6ChB,CAAA;AACL,CAAC,EA/CS,MAAM,KAAN,MAAM,QA+Cf","file":"Body.js","sourcesContent":["namespace deltav {\r\n    export class Body {\r\n        public logger: Logger;\r\n\r\n        protected mass = 5;\r\n        protected position = Vector.Zero(2);\r\n        protected velocity = Vector.Zero(2);\r\n        protected acceleration = Vector.Zero(2);\r\n        protected rotationSpeed: number;\r\n        protected heading = 0;\r\n        protected geometry = Array<Vector>();\r\n        protected brush: string;\r\n\r\n        constructor(logger: Logger, x: number, y: number) {\r\n            this.position = Vector.create([x, y]);\r\n            this.brush = \"black\";\r\n            this.rotationSpeed = 0;\r\n        }\r\n\r\n        public getX() { return this.position.e(1); }\r\n        public getY() { return this.position.e(2); }\r\n        public getV() { return this.velocity.dup(); }\r\n        public getH() { return this.heading; }\r\n\r\n        public update(time: number, world: World, input: Input) {\r\n            this.position = this.position.add(this.velocity.multiply(time));\r\n            this.velocity = this.velocity.add(this.acceleration.multiply(time));\r\n        }\r\n\r\n        public render(ctx: CanvasRenderingContext2D) {\r\n            ctx.fillStyle = this.brush;\r\n            ctx.strokeStyle = this.brush;\r\n\r\n            ctx.beginPath();\r\n\r\n            let v = this.position.add(this.geometry[0]).rotate(this.heading, this.position);\r\n            ctx.moveTo(v.e(1), v.e(2));\r\n\r\n            for (let i = 1; i < this.geometry.length; i++) {\r\n                v = this.position.add(this.geometry[i]).rotate(this.heading, this.position);\r\n                ctx.lineTo(v.e(1), v.e(2));\r\n            }\r\n\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}