{"version":3,"sources":["Smoke.ts"],"names":[],"mappings":"AAAA,IAAU,MAAM,CA0Ff;AA1FD,WAAU,MAAM,EAAC,CAAC;IACd,uBAA8B,WAAI;QAE9B,YAAY,MAAc,EAAE,QAAgB,EAAE,QAAgB,EAAE,MAAc;YAC1E,MAAM,MAAM,EAAE,QAAQ,CAAC,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC;QAC/B,CAAC;QAEM,MAAM,CAAC,IAAY,EAAE,KAAY,EAAE,KAAY;YAClD,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAE7C,KAAK,CAAC,aAAa,CACf,IAAI,KAAK,CACL,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAChB,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG;gBACnB,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG;aACpB,CAAC,EACF,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAEtB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;YAEpB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACvB,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAEM,MAAM,CAAC,GAA6B;QAE3C,CAAC;IACL,CAAC;IAjCY,eAAQ,WAiCpB,CAAA;IAED,oBAA2B,WAAI;QAgB3B,YAAY,MAAc,EAAE,QAAgB,EAAE,QAAgB,EAAE,MAAc,EAAE,KAAc;YAC1F,MAAM,MAAM,EAAE,QAAQ,CAAC,CAAC;YAdpB,iBAAY,GAAG;gBACnB,SAAS;gBACT,SAAS;gBACT,SAAS;gBACT,SAAS;gBACT,WAAW;gBACX,WAAW;gBACX,WAAW;gBACX,WAAW;gBACX,aAAa;gBACb,aAAa;aAChB,CAAC;YAIE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEzB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,OAAO,CAAC;YAE9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACvC,CAAC;QAEM,MAAM,CAAC,IAAY,EAAE,KAAY,EAAE,KAAY;YAClD,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC;YAChC,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;YAEpB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACvB,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAEM,MAAM,CAAC,GAA6B;YACvC,GAAG,CAAC,SAAS,EAAE,CAAC;YAChB,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7C,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAC/D,GAAG,CAAC,IAAI,EAAE,CAAC;QACf,CAAC;QAEO,SAAS,CAAC,OAAe;YAC7B,MAAM,CAAC,OAAO;kBACR,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;kBACjE,IAAI;kBACJ,OAAO;kBACP,GAAG,CAAC;QACd,CAAC;IACL,CAAC;IArDY,YAAK,QAqDjB,CAAA;AACL,CAAC,EA1FS,MAAM,KAAN,MAAM,QA0Ff","file":"Smoke.js","sourcesContent":["namespace deltav {\r\n    export class Wreckage extends Body {\r\n\r\n        constructor(logger: Logger, position: Vector, velocity: Vector, radius: number) {\r\n            super(logger, position);\r\n            this.velocity = velocity;\r\n            this.radius = radius * .75;\r\n        }\r\n\r\n        public update(time: number, world: World, input: Input): boolean {\r\n            let moved = super.update(time, world, input);\r\n\r\n            world.addStaticBody(\r\n                new Smoke(\r\n                    this.logger,\r\n                    this.position,\r\n                    this.velocity.add([\r\n                      Math.random() * 100,\r\n                      Math.random() * 100,\r\n                    ]),\r\n                    this.radius));\r\n\r\n            this.radius /= 1.05;\r\n\r\n            if (this.radius < 0.5) {\r\n                this.isDead = true;\r\n            }\r\n            \r\n            return moved;\r\n        }\r\n\r\n        public render(ctx: CanvasRenderingContext2D) {\r\n            // \r\n        }\r\n    }\r\n\r\n    export class Smoke extends Body {\r\n        private opacity: number;\r\n        private deltaRadius: number;\r\n        private fireGradient = [\r\n            \"255,0,0\",\r\n            \"255,0,0\",\r\n            \"255,0,0\",\r\n            \"255,0,0\",\r\n            \"255,106,0\",\r\n            \"255,106,0\",\r\n            \"255,216,0\",\r\n            \"255,216,0\",\r\n            \"255,255,255\",\r\n            \"111,237,252\",\r\n        ];\r\n\r\n        constructor(logger: Logger, position: Vector, velocity: Vector, radius: number, color?: string) {\r\n            super(logger, position);\r\n            this.velocity = velocity;\r\n\r\n            this.opacity = 1;\r\n            this.brush = color || \"white\";\r\n\r\n            this.radius = radius;\r\n            this.deltaRadius = this.radius / 2;\r\n        }\r\n\r\n        public update(time: number, world: World, input: Input): boolean {\r\n            let moved = super.update(time, world, input);\r\n            this.radius += this.deltaRadius;\r\n            this.opacity -= 0.1;\r\n\r\n            if (this.opacity < 0) {\r\n                this.isDead = true;\r\n            }\r\n            \r\n            return moved;\r\n        }\r\n\r\n        public render(ctx: CanvasRenderingContext2D) {\r\n            ctx.beginPath();\r\n            ctx.fillStyle = this.fireColor(this.opacity);\r\n            ctx.arc(this.getX(), this.getY(), this.radius, 0, Math.PI * 2);\r\n            ctx.fill();\r\n        }\r\n\r\n        private fireColor(opacity: number) {\r\n            return \"rgba(\"\r\n                + this.fireGradient[Math.round(opacity * this.fireGradient.length)]\r\n                + \", \"\r\n                + opacity\r\n                + \")\";\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}