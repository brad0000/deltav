{"version":3,"sources":["Client.ts"],"names":[],"mappings":"AACA,IAAU,MAAM,CA+Cf;AA/CD,WAAU,MAAM,EAAC,CAAC;IAEd;QAQI,YAAY,MAAyB,EAAE,OAA4B;YAJ3D,UAAK,GAAG,CAAC,CAAC;YAMd,MAAM,CAAC,KAAK,GAAI,MAAM,CAAC,UAAU,CAAC;YAClC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;YAEnC,IAAI,CAAC,MAAM,GAAG,IAAI,aAAM,CAAC,OAAO,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,IAAI,YAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YACjE,IAAI,CAAC,KAAK,GAAG,IAAI,YAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAEnC,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;QAEO,aAAa;YACjB,WAAW,CAAC;gBACR,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxB,IAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC,EAAE,EAAE,CAAC,CAAC;QACX,CAAC;QAEO,WAAW,CAAC,IAAY;YAC5B,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC;QAEO,WAAW;YACf,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,MAAM,CAAC;YAC9B,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC/D,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YAElB,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACnD,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YAElB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChC,CAAC;IACL,CAAC;IA5CY,aAAM,SA4ClB,CAAA;AACL,CAAC,EA/CS,MAAM,KAAN,MAAM,QA+Cf","file":"Client.js","sourcesContent":["\r\nnamespace deltav {\r\n\r\n    export class Client {\r\n\r\n        private ctx: CanvasRenderingContext2D;\r\n        private world: World;\r\n        private clock = 0;\r\n        private logger: Logger;\r\n        private input: Input;\r\n\r\n        constructor(canvas: HTMLCanvasElement, logArea: HTMLTextAreaElement) {\r\n\r\n            canvas.width  = window.innerWidth;\r\n            canvas.height = window.innerHeight;\r\n\r\n            this.logger = new Logger(logArea);\r\n            this.world = new World(this.logger, canvas.width, canvas.height);\r\n            this.input = new Input(canvas, document);\r\n            this.ctx = canvas.getContext(\"2d\");\r\n\r\n            this.startGameLoop();\r\n        }\r\n\r\n        private startGameLoop() {\r\n            setInterval(() => {\r\n                this.updateWorld(0.033);\r\n                this.renderWorld();\r\n            }, 30);\r\n        }\r\n\r\n        private updateWorld(time: number) {\r\n            this.clock += time;\r\n            this.world.update(time, this.input);\r\n        }\r\n\r\n        private renderWorld() {\r\n            this.ctx.strokeStyle = \"gray\";\r\n            this.ctx.strokeRect(0, 0, this.world.width, this.world.height);\r\n            this.ctx.stroke();\r\n\r\n            this.ctx.strokeStyle = \"black\";\r\n            this.ctx.strokeText(this.clock.toFixed(1), 20, 20);\r\n            this.ctx.stroke();\r\n\r\n            this.world.render(this.ctx);\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}