{"version":3,"sources":["World.ts"],"names":[],"mappings":"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","file":"World.js","sourcesContent":["namespace deltav {\r\n\r\n    export class World extends Box {\r\n        public drag = -0.9;\r\n        private staticBodies = new Array<Body>();\r\n        private dynamicBodies = new Array<Body>();\r\n        private player: Ship;\r\n        private gcCountdown = 10;\r\n\r\n        private starTree: RTree;\r\n\r\n        constructor(private logger: Logger, public width: number, public height: number) {\r\n            super(0, height, width, 0);\r\n\r\n            this.starTree = new RTree(this);\r\n\r\n            for (let i = 0; i < 200000; i++) {\r\n                this.starTree.add(\r\n                    new Star(\r\n                        this.logger,\r\n                        Vector.create([\r\n                            Math.random() * this.width,\r\n                            Math.random() * this.height,\r\n                        ]),\r\n                        Math.random() * 1.5));\r\n            }\r\n\r\n            for (let i = 0; i < 500; i++) {\r\n                this.addStaticBody(\r\n                    new Asteroid(\r\n                        this.logger,\r\n                        Vector.create([\r\n                            Math.random() * this.width,\r\n                            Math.random() * this.height,\r\n                        ]),\r\n                        Math.random() * 30));\r\n            }\r\n\r\n            this.player = new Ship(this.logger, Vector.create([this.width / 2, this.height / 4]));\r\n            this.addDynamicBody(this.player);\r\n\r\n            for (let i = 0; i < 5; i++) {\r\n                this.addDynamicBody(\r\n                    new Drone(\r\n                        this.logger,\r\n                        Vector.create([\r\n                            Math.random() * this.width,\r\n                            Math.random() * this.height,\r\n                        ])));\r\n            }\r\n        }\r\n\r\n        public addStaticBody(body: Body) {\r\n            this.staticBodies.push(body);\r\n        }\r\n\r\n        public addDynamicBody(body: Body) {\r\n            this.dynamicBodies.push(body);\r\n        }\r\n\r\n        public update(time: number, input: IInput) {\r\n            this.gcCountdown -= time;\r\n\r\n            // collision detection\r\n            let skipHashset: { [id: string]: boolean; } = {};\r\n            let a, b: Body;\r\n            for (let i = 0; i < this.dynamicBodies.length; i++) {\r\n                a = this.dynamicBodies[i];\r\n                for (let j = 0; j < this.dynamicBodies.length; j++) {\r\n                    if (i !== j || skipHashset[i + \",\" + j] === true) {\r\n                        // flag not to check the inverse\r\n                        skipHashset[j + \",\" + i] = true;\r\n\r\n                        // get body b\r\n                        b = this.dynamicBodies[j];\r\n\r\n                        // check for collisions\r\n                        if (this.intersect(a, b)) {\r\n                            this.handleCollision(a, b);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.gcCountdown < 0) {\r\n                this.updateBodiesWithGC(this.staticBodies, time, input);\r\n                this.updateBodiesWithGC(this.dynamicBodies, time, input);\r\n            } else {\r\n                this.updateBodies(this.staticBodies, time, input);\r\n                this.updateBodies(this.dynamicBodies, time, input);\r\n            }\r\n        }\r\n\r\n        public render(ctx: CanvasRenderingContext2D, clip: Box) {\r\n            \r\n            // render star tree\r\n            this.renderBodies(this.starTree.search(clip), ctx, null);\r\n            \r\n            this.renderBodies(this.staticBodies, ctx, clip);\r\n            this.renderBodies(this.dynamicBodies, ctx, clip);\r\n        }\r\n\r\n        public getPlayerPosition() {\r\n            return this.player.getP();\r\n        }\r\n\r\n        private handleCollision(a: Body, b: Body) {\r\n\r\n            let isADead = a.collide(b);\r\n            let isBDead = b.collide(a);\r\n            \r\n            let wreakage: Wreckage;\r\n            \r\n            if (isADead && isBDead) {\r\n                wreakage = new Wreckage(\r\n                    this.logger,\r\n                    a.getP().avg(b.getP()), \r\n                    a.getV().avg(b.getV()),\r\n                    (a.getR() + b.getR()) / 2);\r\n            } else if (isADead) {\r\n                wreakage = new Wreckage(\r\n                    this.logger,\r\n                    a.getP(), \r\n                    a.getV(),\r\n                    a.getR());\r\n            } else if (isBDead) {\r\n                wreakage = new Wreckage(\r\n                    this.logger,\r\n                    b.getP(), \r\n                    b.getV(),\r\n                    b.getR());\r\n            }\r\n            \r\n            if (wreakage != null) {\r\n                this.addStaticBody(wreakage);\r\n            }\r\n        }\r\n        \r\n        private intersect(a: Body, b: Body): boolean {\r\n            if (a.isDead || b.isDead) {\r\n                return false;\r\n            } else {\r\n                if (a.getCollisionBox().intersects(b.getCollisionBox())) {\r\n                    if (!this.isBulletHittingWeapon(a, b)) {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        private isBulletHittingWeapon(a: Body, b: Body): boolean {\r\n            // Check for an edge case where a bullet collides with a ship it was just fired from.\r\n            if (a instanceof Ship && b instanceof Bullet) {\r\n                return (<Ship>a).recentlyFired(<Bullet>b);\r\n            } else if (a instanceof Bullet && b instanceof Ship) {\r\n                return (<Ship>b).recentlyFired(<Bullet>a);\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        private updateBodiesWithGC(bodies: Array<Body>, time: number, input: IInput) {\r\n            let old = bodies;\r\n            bodies = [];\r\n            for (let i = 0; i < old.length; i++) {\r\n                if (!old[i].isDead) {\r\n                    old[i].update(time, this, input);\r\n                    bodies.push(old[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        private updateBodies(bodies: Array<Body>, time: number, input: IInput) {\r\n            for (let i = 0; i < bodies.length; i++) {\r\n                if (!bodies[i].isDead) {\r\n                    bodies[i].update(time, this, input);\r\n                }\r\n            }\r\n        }\r\n\r\n        private renderBodies(bodies: Array<Body>, ctx: CanvasRenderingContext2D, clip: Box) {\r\n\r\n            if (clip == null) {\r\n                \r\n                for (let i = 0; i < bodies.length; i++) {\r\n                    if (!bodies[i].isDead) {\r\n                        bodies[i].render(ctx);\r\n                    }\r\n                }\r\n                \r\n            } else {\r\n             \r\n                for (let i = 0; i < bodies.length; i++) {\r\n                    if (!bodies[i].isDead && clip.intersects(bodies[i].getBoundingBox())) {\r\n                        bodies[i].render(ctx);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}