{"version":3,"sources":["World.ts"],"names":[],"mappings":"AAAA,IAAU,MAAM,CA4Cf;AA5CD,WAAU,MAAM,EAAC,CAAC;IAEd;QAWI,YAAoB,MAAc,EAAS,KAAa,EAAS,MAAc;YAA3D,WAAM,GAAN,MAAM,CAAQ;YAAS,UAAK,GAAL,KAAK,CAAQ;YAAS,WAAM,GAAN,MAAM,CAAQ;YAVxE,UAAK,GAAG,CAAC,CAAC;YACV,UAAK,GAAG,CAAC,CAAC;YACV,SAAI,GAAG,CAAC,CAAC;YACT,SAAI,GAAG,CAAC,CAAC;YAGT,SAAI,GAAG,CAAC,GAAG,CAAC;YAEZ,WAAM,GAAG,IAAI,KAAK,EAAQ,CAAC;YAG9B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAElB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAElD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,eAAQ,CACzB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,EAC1B,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAC3B,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YAC7B,CAAC;QACL,CAAC;QAEM,MAAM,CAAC,IAAY,EAAE,KAAY;YACpC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC7C,CAAC;QACL,CAAC;QAEM,MAAM,CAAC,GAA6B;YACvC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;YACxB,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5C,GAAG,CAAC,IAAI,EAAE,CAAC;YAEV,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC9B,CAAC;QACN,CAAC;IACL,CAAC;IAzCY,YAAK,QAyCjB,CAAA;AACL,CAAC,EA5CS,MAAM,KAAN,MAAM,QA4Cf","file":"World.js","sourcesContent":["namespace deltav {\r\n\r\n    export class World {\r\n        public north = 0;\r\n        public south = 0;\r\n        public east = 0;\r\n        public west = 0;\r\n\r\n        // drag acts against the velocity of the object in a small amount\r\n        public drag = -0.9;\r\n\r\n        public bodies = new Array<Body>();\r\n\r\n        constructor(private logger: Logger, public width: number, public height: number) {\r\n            this.south = height;\r\n            this.east = width;\r\n\r\n            this.bodies.push(new Ship(this.logger, 400, 500));\r\n\r\n            for (let i = 0; i < 50; i++) {\r\n                this.bodies.push(new Asteroid(\r\n                    this.logger,\r\n                    Math.random() * this.width,\r\n                    Math.random() * this.height,\r\n                    Math.random() * 30));\r\n            }\r\n        }\r\n\r\n        public update(time: number, input: Input) {\r\n            for (let i = 0; i < this.bodies.length; i++) {\r\n                this.bodies[i].update(time, this, input);\r\n            }\r\n        }\r\n\r\n        public render(ctx: CanvasRenderingContext2D) {\r\n            ctx.fillStyle = \"black\";\r\n            ctx.fillRect(0, 0, this.width, this.height);\r\n            ctx.fill();\r\n\r\n             for (let i = 0; i < this.bodies.length; i++) {\r\n                this.bodies[i].render(ctx);\r\n             }\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}